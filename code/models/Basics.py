import os
import time

from .Data import Logger
from .Data import MalImgDataset

class MachineLearningModel:
    """
        A class that defines common attributes for the ML models of this work.
    """

    def __init__(self, path, model_name, ext='png', batch_size=64):
        self.logger = Logger()
        self.logger.info("Initializing basic ML model.")
        self.data_handler = MalImgDataset(path, ext, batch_size=batch_size)
        self.model_name = model_name
        self.model_paths = []
        self.ext = ext
        self.results = {}

    def get_tmp_model_path(self):
        return self.data_handler.tmp_model_output_path + '/' + self.model_name

    def get_model_path(self):
        return self.data_handler.output_path + self.model_name

    def backup_old_model(self):
        if (os.path.isfile(self.get_model_path())):
            file_timestamp = time.ctime(os.path.getmtime(self.get_model_path()))
            os.rename(self.get_model_path(), self.get_model_path() + '_' + file_timestamp + '.backup')

    def test_injected(self, base_path, subdir, sections=5, bytes=5):
        return

    def save_model(self):
        return

    def load_model(self):
        return

    ########################
    ### ABSTRACT METHDOS ###
    ########################
    def build_graph(self):
        return

    def train(self):
        return

    def _train(self):
        return

    def _test(self):
        return
